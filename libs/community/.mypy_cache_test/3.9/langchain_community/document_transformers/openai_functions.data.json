{".class": "MypyFile", "_fullname": "langchain_community.document_transformers.openai_functions", "future_import_flags": [], "is_partial_stub_package": false, "is_stub": false, "names": {".class": "SymbolTable", "Any": {".class": "SymbolTableNode", "cross_ref": "typing.Any", "kind": "Gdef"}, "BaseDocumentTransformer": {".class": "SymbolTableNode", "cross_ref": "langchain_core.documents.transformers.BaseDocumentTransformer", "kind": "Gdef"}, "BaseLanguageModel": {".class": "SymbolTableNode", "cross_ref": "langchain_core.language_models.base.BaseLanguageModel", "kind": "Gdef"}, "BaseModel": {".class": "SymbolTableNode", "cross_ref": "pydantic.main.BaseModel", "kind": "Gdef"}, "ChatPromptTemplate": {".class": "SymbolTableNode", "cross_ref": "langchain_core.prompts.chat.ChatPromptTemplate", "kind": "Gdef"}, "Dict": {".class": "SymbolTableNode", "cross_ref": "typing.Dict", "kind": "Gdef"}, "Document": {".class": "SymbolTableNode", "cross_ref": "langchain_core.documents.base.Document", "kind": "Gdef"}, "OpenAIMetadataTagger": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["langchain_core.documents.transformers.BaseDocumentTransformer", "pydantic.main.BaseModel"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "langchain_community.document_transformers.openai_functions.OpenAIMetadataTagger", "name": "OpenAIMetadataTagger", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "langchain_community.document_transformers.openai_functions.OpenAIMetadataTagger", "has_param_spec_type": false, "metaclass_type": "pydantic.main.ModelMetaclass", "metadata": {}, "module_name": "langchain_community.document_transformers.openai_functions", "mro": ["langchain_community.document_transformers.openai_functions.OpenAIMetadataTagger", "langchain_core.documents.transformers.BaseDocumentTransformer", "abc.ABC", "pydantic.main.BaseModel", "pydantic.utils.Representation", "builtins.object"], "names": {".class": "SymbolTable", "atransform_documents": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 4], "arg_names": ["self", "documents", "kwargs"], "flags": ["is_coroutine"], "fullname": "langchain_community.document_transformers.openai_functions.OpenAIMetadataTagger.atransform_documents", "name": "atransform_documents", "type": {".class": "CallableType", "arg_kinds": [0, 0, 4], "arg_names": ["self", "documents", "kwargs"], "arg_types": ["langchain_community.document_transformers.openai_functions.OpenAIMetadataTagger", {".class": "Instance", "args": ["langchain_core.documents.base.Document"], "type_ref": "typing.Sequence"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "atransform_documents of OpenAIMetadataTagger", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}, {".class": "Instance", "args": ["langchain_core.documents.base.Document"], "type_ref": "typing.Sequence"}], "type_ref": "typing.Coroutine"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "tagging_chain": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "langchain_community.document_transformers.openai_functions.OpenAIMetadataTagger.tagging_chain", "name": "tagging_chain", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "transform_documents": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 4], "arg_names": ["self", "documents", "kwargs"], "flags": [], "fullname": "langchain_community.document_transformers.openai_functions.OpenAIMetadataTagger.transform_documents", "name": "transform_documents", "type": {".class": "CallableType", "arg_kinds": [0, 0, 4], "arg_names": ["self", "documents", "kwargs"], "arg_types": ["langchain_community.document_transformers.openai_functions.OpenAIMetadataTagger", {".class": "Instance", "args": ["langchain_core.documents.base.Document"], "type_ref": "typing.Sequence"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "transform_documents of OpenAIMetadataTagger", "ret_type": {".class": "Instance", "args": ["langchain_core.documents.base.Document"], "type_ref": "typing.Sequence"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Optional": {".class": "SymbolTableNode", "cross_ref": "typing.Optional", "kind": "Gdef"}, "Sequence": {".class": "SymbolTableNode", "cross_ref": "typing.Sequence", "kind": "Gdef"}, "Type": {".class": "SymbolTableNode", "cross_ref": "typing.Type", "kind": "Gdef"}, "Union": {".class": "SymbolTableNode", "cross_ref": "typing.Union", "kind": "Gdef"}, "__annotations__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "langchain_community.document_transformers.openai_functions.__annotations__", "name": "__annotations__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.dict"}}}, "__doc__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "langchain_community.document_transformers.openai_functions.__doc__", "name": "__doc__", "type": "builtins.str"}}, "__file__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "langchain_community.document_transformers.openai_functions.__file__", "name": "__file__", "type": "builtins.str"}}, "__name__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "langchain_community.document_transformers.openai_functions.__name__", "name": "__name__", "type": "builtins.str"}}, "__package__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "langchain_community.document_transformers.openai_functions.__package__", "name": "__package__", "type": "builtins.str"}}, "create_metadata_tagger": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 1, 5], "arg_names": ["metadata_schema", "llm", "prompt", "tagging_chain_kwargs"], "flags": [], "fullname": "langchain_community.document_transformers.openai_functions.create_metadata_tagger", "name": "create_metadata_tagger", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 5], "arg_names": ["metadata_schema", "llm", "prompt", "tagging_chain_kwargs"], "arg_types": [{".class": "UnionType", "items": [{".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.dict"}, {".class": "TypeType", "item": "pydantic.main.BaseModel"}]}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "langchain_core.language_models.base.BaseLanguageModel"}, {".class": "UnionType", "items": ["langchain_core.prompts.chat.ChatPromptTemplate", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "builtins.dict"}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "create_metadata_tagger", "ret_type": "langchain_community.document_transformers.openai_functions.OpenAIMetadataTagger", "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "path": "/Users/user/langchain-contribution/langchain/libs/community/langchain_community/document_transformers/openai_functions.py"}