{".class": "MypyFile", "_fullname": "langchain_community.indexes._sql_record_manager", "future_import_flags": [], "is_partial_stub_package": false, "is_stub": false, "names": {".class": "SymbolTable", "Any": {".class": "SymbolTableNode", "cross_ref": "typing.Any", "kind": "Gdef"}, "AsyncEngine": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.ext.asyncio.engine.AsyncEngine", "kind": "Gdef"}, "AsyncGenerator": {".class": "SymbolTableNode", "cross_ref": "typing.AsyncGenerator", "kind": "Gdef"}, "AsyncSession": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.ext.asyncio.session.AsyncSession", "kind": "Gdef"}, "Base": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_inferred", "has_explicit_value"], "fullname": "langchain_community.indexes._sql_record_manager.Base", "name": "Base", "type": {".class": "AnyType", "missing_import_name": null, "source_any": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "type_of_any": 7}}}, "Column": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.schema.Column", "kind": "Gdef"}, "Dict": {".class": "SymbolTableNode", "cross_ref": "typing.Dict", "kind": "Gdef"}, "Engine": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.engine.base.Engine", "kind": "Gdef"}, "Float": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.Float", "kind": "Gdef"}, "Generator": {".class": "SymbolTableNode", "cross_ref": "typing.Generator", "kind": "Gdef"}, "Index": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.schema.Index", "kind": "Gdef"}, "List": {".class": "SymbolTableNode", "cross_ref": "typing.List", "kind": "Gdef"}, "Optional": {".class": "SymbolTableNode", "cross_ref": "typing.Optional", "kind": "Gdef"}, "RecordManager": {".class": "SymbolTableNode", "cross_ref": "langchain_community.indexes.base.RecordManager", "kind": "Gdef"}, "SQLRecordManager": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["langchain_community.indexes.base.RecordManager"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "langchain_community.indexes._sql_record_manager.SQLRecordManager", "name": "SQLRecordManager", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "langchain_community.indexes._sql_record_manager.SQLRecordManager", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {}, "module_name": "langchain_community.indexes._sql_record_manager", "mro": ["langchain_community.indexes._sql_record_manager.SQLRecordManager", "langchain_community.indexes.base.RecordManager", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 5, 5, 5, 5], "arg_names": ["self", "namespace", "engine", "db_url", "engine_kwargs", "async_mode"], "flags": [], "fullname": "langchain_community.indexes._sql_record_manager.SQLRecordManager.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 5, 5, 5, 5], "arg_names": ["self", "namespace", "engine", "db_url", "engine_kwargs", "async_mode"], "arg_types": ["langchain_community.indexes._sql_record_manager.SQLRecordManager", "builtins.str", {".class": "UnionType", "items": ["sqlalchemy.engine.base.Engine", "sqlalchemy.ext.asyncio.engine.AsyncEngine", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "NoneType"}, "builtins.str", {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.engine.url.URL"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.dict"}, {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of SQLRecordManager", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "_amake_session": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_generator", "is_coroutine", "is_async_generator", "is_decorated"], "fullname": "langchain_community.indexes._sql_record_manager.SQLRecordManager._amake_session", "name": "_amake_session", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["langchain_community.indexes._sql_record_manager.SQLRecordManager"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_amake_session of SQLRecordManager", "ret_type": {".class": "Instance", "args": ["sqlalchemy.ext.asyncio.session.AsyncSession", {".class": "NoneType"}], "type_ref": "typing.AsyncGenerator"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready", "is_inferred"], "fullname": "langchain_community.indexes._sql_record_manager.SQLRecordManager._amake_session", "name": "_amake_session", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["langchain_community.indexes._sql_record_manager.SQLRecordManager"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_amake_session of SQLRecordManager", "ret_type": {".class": "Instance", "args": ["sqlalchemy.ext.asyncio.session.AsyncSession"], "type_ref": "contextlib._AsyncGeneratorContextManager"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "_make_session": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_generator", "is_decorated"], "fullname": "langchain_community.indexes._sql_record_manager.SQLRecordManager._make_session", "name": "_make_session", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["langchain_community.indexes._sql_record_manager.SQLRecordManager"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_make_session of SQLRecordManager", "ret_type": {".class": "Instance", "args": ["sqlalchemy.orm.session.Session", {".class": "NoneType"}, {".class": "NoneType"}], "type_ref": "typing.Generator"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready", "is_inferred"], "fullname": "langchain_community.indexes._sql_record_manager.SQLRecordManager._make_session", "name": "_make_session", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["langchain_community.indexes._sql_record_manager.SQLRecordManager"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_make_session of SQLRecordManager", "ret_type": {".class": "Instance", "args": ["sqlalchemy.orm.session.Session"], "type_ref": "contextlib._GeneratorContextManager"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "acreate_schema": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_coroutine"], "fullname": "langchain_community.indexes._sql_record_manager.SQLRecordManager.acreate_schema", "name": "acreate_schema", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["langchain_community.indexes._sql_record_manager.SQLRecordManager"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "acreate_schema of SQLRecordManager", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}, {".class": "NoneType"}], "type_ref": "typing.Coroutine"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "adelete_keys": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "keys"], "flags": ["is_coroutine"], "fullname": "langchain_community.indexes._sql_record_manager.SQLRecordManager.adelete_keys", "name": "adelete_keys", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "keys"], "arg_types": ["langchain_community.indexes._sql_record_manager.SQLRecordManager", {".class": "Instance", "args": ["builtins.str"], "type_ref": "typing.Sequence"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "adelete_keys of SQLRecordManager", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}, {".class": "NoneType"}], "type_ref": "typing.Coroutine"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "aexists": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "keys"], "flags": ["is_coroutine"], "fullname": "langchain_community.indexes._sql_record_manager.SQLRecordManager.aexists", "name": "aexists", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "keys"], "arg_types": ["langchain_community.indexes._sql_record_manager.SQLRecordManager", {".class": "Instance", "args": ["builtins.str"], "type_ref": "typing.Sequence"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "aexists of SQLRecordManager", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}, {".class": "Instance", "args": ["builtins.bool"], "type_ref": "builtins.list"}], "type_ref": "typing.Coroutine"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "aget_time": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_coroutine"], "fullname": "langchain_community.indexes._sql_record_manager.SQLRecordManager.aget_time", "name": "aget_time", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["langchain_community.indexes._sql_record_manager.SQLRecordManager"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "aget_time of SQLRecordManager", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}, "builtins.float"], "type_ref": "typing.Coroutine"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "alist_keys": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 5, 5, 5, 5], "arg_names": ["self", "before", "after", "group_ids", "limit"], "flags": ["is_coroutine"], "fullname": "langchain_community.indexes._sql_record_manager.SQLRecordManager.alist_keys", "name": "alist_keys", "type": {".class": "CallableType", "arg_kinds": [0, 5, 5, 5, 5], "arg_names": ["self", "before", "after", "group_ids", "limit"], "arg_types": ["langchain_community.indexes._sql_record_manager.SQLRecordManager", {".class": "UnionType", "items": ["builtins.float", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.float", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": ["builtins.str"], "type_ref": "typing.Sequence"}, {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "alist_keys of SQLRecordManager", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}, {".class": "Instance", "args": ["builtins.str"], "type_ref": "builtins.list"}], "type_ref": "typing.Coroutine"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "aupdate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 5, 5], "arg_names": ["self", "keys", "group_ids", "time_at_least"], "flags": ["is_coroutine"], "fullname": "langchain_community.indexes._sql_record_manager.SQLRecordManager.aupdate", "name": "aupdate", "type": {".class": "CallableType", "arg_kinds": [0, 0, 5, 5], "arg_names": ["self", "keys", "group_ids", "time_at_least"], "arg_types": ["langchain_community.indexes._sql_record_manager.SQLRecordManager", {".class": "Instance", "args": ["builtins.str"], "type_ref": "typing.Sequence"}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}], "type_ref": "typing.Sequence"}, {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.float", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "aupdate of SQLRecordManager", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}, {".class": "NoneType"}], "type_ref": "typing.Coroutine"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "create_schema": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "langchain_community.indexes._sql_record_manager.SQLRecordManager.create_schema", "name": "create_schema", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["langchain_community.indexes._sql_record_manager.SQLRecordManager"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "create_schema of SQLRecordManager", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "delete_keys": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "keys"], "flags": [], "fullname": "langchain_community.indexes._sql_record_manager.SQLRecordManager.delete_keys", "name": "delete_keys", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "keys"], "arg_types": ["langchain_community.indexes._sql_record_manager.SQLRecordManager", {".class": "Instance", "args": ["builtins.str"], "type_ref": "typing.Sequence"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "delete_keys of SQLRecordManager", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "dialect": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_inferred"], "fullname": "langchain_community.indexes._sql_record_manager.SQLRecordManager.dialect", "name": "dialect", "type": "builtins.str"}}, "engine": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_inferred"], "fullname": "langchain_community.indexes._sql_record_manager.SQLRecordManager.engine", "name": "engine", "type": {".class": "UnionType", "items": ["sqlalchemy.engine.base.Engine", "sqlalchemy.ext.asyncio.engine.AsyncEngine"]}}}, "exists": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["self", "keys"], "flags": [], "fullname": "langchain_community.indexes._sql_record_manager.SQLRecordManager.exists", "name": "exists", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "keys"], "arg_types": ["langchain_community.indexes._sql_record_manager.SQLRecordManager", {".class": "Instance", "args": ["builtins.str"], "type_ref": "typing.Sequence"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "exists of SQLRecordManager", "ret_type": {".class": "Instance", "args": ["builtins.bool"], "type_ref": "builtins.list"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "get_time": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "langchain_community.indexes._sql_record_manager.SQLRecordManager.get_time", "name": "get_time", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["langchain_community.indexes._sql_record_manager.SQLRecordManager"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "get_time of SQLRecordManager", "ret_type": "builtins.float", "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "list_keys": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 5, 5, 5, 5], "arg_names": ["self", "before", "after", "group_ids", "limit"], "flags": [], "fullname": "langchain_community.indexes._sql_record_manager.SQLRecordManager.list_keys", "name": "list_keys", "type": {".class": "CallableType", "arg_kinds": [0, 5, 5, 5, 5], "arg_names": ["self", "before", "after", "group_ids", "limit"], "arg_types": ["langchain_community.indexes._sql_record_manager.SQLRecordManager", {".class": "UnionType", "items": ["builtins.float", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.float", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": ["builtins.str"], "type_ref": "typing.Sequence"}, {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "list_keys of SQLRecordManager", "ret_type": {".class": "Instance", "args": ["builtins.str"], "type_ref": "builtins.list"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "session_factory": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_inferred"], "fullname": "langchain_community.indexes._sql_record_manager.SQLRecordManager.session_factory", "name": "session_factory", "type": {".class": "UnionType", "items": [{".class": "Instance", "args": ["sqlalchemy.orm.session.Session"], "type_ref": "sqlalchemy.orm.session.sessionmaker"}, {".class": "Instance", "args": ["sqlalchemy.ext.asyncio.session.AsyncSession"], "type_ref": "sqlalchemy.ext.asyncio.session.async_sessionmaker"}]}}}, "update": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 5, 5], "arg_names": ["self", "keys", "group_ids", "time_at_least"], "flags": [], "fullname": "langchain_community.indexes._sql_record_manager.SQLRecordManager.update", "name": "update", "type": {".class": "CallableType", "arg_kinds": [0, 0, 5, 5], "arg_names": ["self", "keys", "group_ids", "time_at_least"], "arg_types": ["langchain_community.indexes._sql_record_manager.SQLRecordManager", {".class": "Instance", "args": ["builtins.str"], "type_ref": "typing.Sequence"}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}], "type_ref": "typing.Sequence"}, {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.float", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "update of SQLRecordManager", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Sequence": {".class": "SymbolTableNode", "cross_ref": "typing.Sequence", "kind": "Gdef"}, "Session": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.orm.session.Session", "kind": "Gdef"}, "String": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.String", "kind": "Gdef"}, "URL": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.engine.url.URL", "kind": "Gdef"}, "Union": {".class": "SymbolTableNode", "cross_ref": "typing.Union", "kind": "Gdef"}, "UniqueConstraint": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.schema.UniqueConstraint", "kind": "Gdef"}, "UpsertionRecord": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": [], "abstract_attributes": [], "bases": ["builtins.object"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "langchain_community.indexes._sql_record_manager.UpsertionRecord", "name": "UpsertionRecord", "type_vars": []}, "deletable_attributes": [], "flags": ["fallback_to_any"], "fullname": "langchain_community.indexes._sql_record_manager.UpsertionRecord", "has_param_spec_type": false, "metaclass_type": null, "metadata": {}, "module_name": "langchain_community.indexes._sql_record_manager", "mro": ["langchain_community.indexes._sql_record_manager.UpsertionRecord", "builtins.object"], "names": {".class": "SymbolTable", "__table_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_inferred", "has_explicit_value"], "fullname": "langchain_community.indexes._sql_record_manager.UpsertionRecord.__table_args__", "name": "__table_args__", "type": {".class": "TupleType", "implicit": false, "items": ["sqlalchemy.sql.schema.UniqueConstraint", "sqlalchemy.sql.schema.Index"], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}}, "__tablename__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready", "is_inferred", "has_explicit_value"], "fullname": "langchain_community.indexes._sql_record_manager.UpsertionRecord.__tablename__", "name": "__tablename__", "type": "builtins.str"}}, "group_id": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_inferred", "has_explicit_value"], "fullname": "langchain_community.indexes._sql_record_manager.UpsertionRecord.group_id", "name": "group_id", "type": {".class": "Instance", "args": ["builtins.str"], "type_ref": "sqlalchemy.sql.schema.Column"}}}, "key": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_inferred", "has_explicit_value"], "fullname": "langchain_community.indexes._sql_record_manager.UpsertionRecord.key", "name": "key", "type": {".class": "Instance", "args": ["builtins.str"], "type_ref": "sqlalchemy.sql.schema.Column"}}}, "namespace": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_inferred", "has_explicit_value"], "fullname": "langchain_community.indexes._sql_record_manager.UpsertionRecord.namespace", "name": "namespace", "type": {".class": "Instance", "args": ["builtins.str"], "type_ref": "sqlalchemy.sql.schema.Column"}}}, "updated_at": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_inferred", "has_explicit_value"], "fullname": "langchain_community.indexes._sql_record_manager.UpsertionRecord.updated_at", "name": "updated_at", "type": {".class": "Instance", "args": ["builtins.float"], "type_ref": "sqlalchemy.sql.schema.Column"}}}, "uuid": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_inferred", "has_explicit_value"], "fullname": "langchain_community.indexes._sql_record_manager.UpsertionRecord.uuid", "name": "uuid", "type": {".class": "Instance", "args": ["builtins.str"], "type_ref": "sqlalchemy.sql.schema.Column"}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "__annotations__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "langchain_community.indexes._sql_record_manager.__annotations__", "name": "__annotations__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.dict"}}}, "__doc__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "langchain_community.indexes._sql_record_manager.__doc__", "name": "__doc__", "type": "builtins.str"}}, "__file__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "langchain_community.indexes._sql_record_manager.__file__", "name": "__file__", "type": "builtins.str"}}, "__name__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "langchain_community.indexes._sql_record_manager.__name__", "name": "__name__", "type": "builtins.str"}}, "__package__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "langchain_community.indexes._sql_record_manager.__package__", "name": "__package__", "type": "builtins.str"}}, "and_": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql._elements_constructors.and_", "kind": "Gdef"}, "async_sessionmaker": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.ext.asyncio.session.async_sessionmaker", "kind": "Gdef"}, "contextlib": {".class": "SymbolTableNode", "cross_ref": "contextlib", "kind": "Gdef"}, "create_async_engine": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.ext.asyncio.engine.create_async_engine", "kind": "Gdef"}, "create_engine": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.engine.create.create_engine", "kind": "Gdef"}, "decimal": {".class": "SymbolTableNode", "cross_ref": "decimal", "kind": "Gdef"}, "declarative_base": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.ext.declarative.declarative_base", "kind": "Gdef"}, "delete": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql._dml_constructors.delete", "kind": "Gdef"}, "select": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql._selectable_constructors.select", "kind": "Gdef"}, "sessionmaker": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.orm.session.sessionmaker", "kind": "Gdef"}, "text": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql._elements_constructors.text", "kind": "Gdef"}, "uuid": {".class": "SymbolTableNode", "cross_ref": "uuid", "kind": "Gdef"}}, "path": "/Users/user/langchain-contribution/langchain/libs/community/langchain_community/indexes/_sql_record_manager.py"}