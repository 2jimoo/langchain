{".class": "MypyFile", "_fullname": "tests.unit_tests.document_loaders.test_json_loader", "future_import_flags": [], "is_partial_stub_package": false, "is_stub": false, "names": {".class": "SymbolTable", "Any": {".class": "SymbolTableNode", "cross_ref": "typing.Any", "kind": "Gdef"}, "Dict": {".class": "SymbolTableNode", "cross_ref": "typing.Dict", "kind": "Gdef"}, "Document": {".class": "SymbolTableNode", "cross_ref": "langchain_core.documents.base.Document", "kind": "Gdef"}, "JSONLoader": {".class": "SymbolTableNode", "cross_ref": "langchain_community.document_loaders.json_loader.JSONLoader", "kind": "Gdef"}, "MockerFixture": {".class": "SymbolTableNode", "cross_ref": "pytest_mock.plugin.MockerFixture", "kind": "Gdef"}, "__annotations__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "tests.unit_tests.document_loaders.test_json_loader.__annotations__", "name": "__annotations__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.dict"}}}, "__doc__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "tests.unit_tests.document_loaders.test_json_loader.__doc__", "name": "__doc__", "type": "builtins.str"}}, "__file__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "tests.unit_tests.document_loaders.test_json_loader.__file__", "name": "__file__", "type": "builtins.str"}}, "__name__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "tests.unit_tests.document_loaders.test_json_loader.__name__", "name": "__name__", "type": "builtins.str"}}, "__package__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "tests.unit_tests.document_loaders.test_json_loader.__package__", "name": "__package__", "type": "builtins.str"}}, "io": {".class": "SymbolTableNode", "cross_ref": "io", "kind": "Gdef"}, "pytest": {".class": "SymbolTableNode", "cross_ref": "pytest", "kind": "Gdef"}, "pytestmark": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_inferred", "has_explicit_value"], "fullname": "tests.unit_tests.document_loaders.test_json_loader.pytestmark", "name": "pytestmark", "type": "_pytest.mark.structures.MarkDecorator"}}, "raises": {".class": "SymbolTableNode", "cross_ref": "_pytest.python_api.raises", "kind": "Gdef"}, "test_json_meta_01": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 0, 0], "arg_names": ["patch_func", "patch_func_value", "kwargs", "mocker"], "flags": ["is_decorated"], "fullname": "tests.unit_tests.document_loaders.test_json_loader.test_json_meta_01", "name": "test_json_meta_01", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 0], "arg_names": ["patch_func", "patch_func_value", "kwargs", "mocker"], "arg_types": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "builtins.dict"}, "pytest_mock.plugin.MockerFixture"], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "test_json_meta_01", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_ready", "is_inferred"], "fullname": "tests.unit_tests.document_loaders.test_json_loader.test_json_meta_01", "name": "test_json_meta_01", "type": {".class": "AnyType", "missing_import_name": null, "source_any": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}, "type_of_any": 7}}}}, "test_json_meta_02": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0, 0, 0], "arg_names": ["patch_func", "patch_func_value", "kwargs", "mocker"], "flags": ["is_decorated"], "fullname": "tests.unit_tests.document_loaders.test_json_loader.test_json_meta_02", "name": "test_json_meta_02", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 0], "arg_names": ["patch_func", "patch_func_value", "kwargs", "mocker"], "arg_types": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "builtins.dict"}, "pytest_mock.plugin.MockerFixture"], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "test_json_meta_02", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_ready", "is_inferred"], "fullname": "tests.unit_tests.document_loaders.test_json_loader.test_json_meta_02", "name": "test_json_meta_02", "type": {".class": "AnyType", "missing_import_name": null, "source_any": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}, "type_of_any": 7}}}}, "test_load_empty_jsonlines": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["mocker"], "flags": [], "fullname": "tests.unit_tests.document_loaders.test_json_loader.test_load_empty_jsonlines", "name": "test_load_empty_jsonlines", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["mocker"], "arg_types": ["pytest_mock.plugin.MockerFixture"], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "test_load_empty_jsonlines", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "test_load_invalid_test_content": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["mocker"], "flags": [], "fullname": "tests.unit_tests.document_loaders.test_json_loader.test_load_invalid_test_content", "name": "test_load_invalid_test_content", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["mocker"], "arg_types": ["pytest_mock.plugin.MockerFixture"], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "test_load_invalid_test_content", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "test_load_jsonlines": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["mocker"], "flags": [], "fullname": "tests.unit_tests.document_loaders.test_json_loader.test_load_jsonlines", "name": "test_load_jsonlines", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["mocker"], "arg_types": ["pytest_mock.plugin.MockerFixture"], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "test_load_jsonlines", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "test_load_jsonlines_list": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0, 0], "arg_names": ["params", "mocker"], "flags": ["is_decorated"], "fullname": "tests.unit_tests.document_loaders.test_json_loader.test_load_jsonlines_list", "name": "test_load_jsonlines_list", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["params", "mocker"], "arg_types": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "builtins.dict"}, "pytest_mock.plugin.MockerFixture"], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "test_load_jsonlines_list", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_ready", "is_inferred"], "fullname": "tests.unit_tests.document_loaders.test_json_loader.test_load_jsonlines_list", "name": "test_load_jsonlines_list", "type": {".class": "AnyType", "missing_import_name": null, "source_any": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}, "type_of_any": 7}}}}, "test_load_valid_bool_content": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["mocker"], "flags": [], "fullname": "tests.unit_tests.document_loaders.test_json_loader.test_load_valid_bool_content", "name": "test_load_valid_bool_content", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["mocker"], "arg_types": ["pytest_mock.plugin.MockerFixture"], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "test_load_valid_bool_content", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "test_load_valid_dict_content": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["mocker"], "flags": [], "fullname": "tests.unit_tests.document_loaders.test_json_loader.test_load_valid_dict_content", "name": "test_load_valid_dict_content", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["mocker"], "arg_types": ["pytest_mock.plugin.MockerFixture"], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "test_load_valid_dict_content", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "test_load_valid_numeric_content": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["mocker"], "flags": [], "fullname": "tests.unit_tests.document_loaders.test_json_loader.test_load_valid_numeric_content", "name": "test_load_valid_numeric_content", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["mocker"], "arg_types": ["pytest_mock.plugin.MockerFixture"], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "test_load_valid_numeric_content", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}, "test_load_valid_string_content": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "abstract_status": 0, "arg_kinds": [0], "arg_names": ["mocker"], "flags": [], "fullname": "tests.unit_tests.document_loaders.test_json_loader.test_load_valid_string_content", "name": "test_load_valid_string_content", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["mocker"], "arg_types": ["pytest_mock.plugin.MockerFixture"], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "test_load_valid_string_content", "ret_type": {".class": "NoneType"}, "type_guard": null, "unpack_kwargs": false, "variables": []}}}}, "path": "tests/unit_tests/document_loaders/test_json_loader.py"}